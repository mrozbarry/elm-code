{
  "rules": {
    "compile-jobs": {
      "$jobId": {
        ".read": "auth.uid == data.child('userId').val() || auth.token.isAdmin === true",
        ".write": "auth != null",

        "progress": {
          ".validate": "newData.isNumber() && newData.val() >= 0 && newData.val() <= 100"
        },

        "state": {
          ".validate": "newData.isString()"
        },

        "error": {
          ".validate": "newData.isString()"
        },

        "snippetId": {
          ".validate": "newData.isString()"
        },

        "packageId": {
          ".validate": "newData.isString()"
        },

        "userId": {
          ".validate": "newData.isString()"
        },

        "$else": {
          ".validate": false
        }
      }
    },

    "users": {
      "$userId": {
        ".read": true,
        ".indexOn": ["createdAt", "isBanned", "snippetCount"],

        "createdAt": {
          ".write": "auth.uid == $userId",
          ".validate": "newData.isNumber() && (newData.val() === now || data.val() == newData.val())"
        },

        "isBanned": {
          ".write": "auth.token.isAdmin === true",
          ".validate": "newData.isBoolean()"
        },

        "banReason": {
          ".write": "auth.token.isAdmin === true",
          ".validate": "newData.isString()"
        },

        "snippetCount": {
          ".write": "auth.uid === $userId || auth.token.isAdmin === true",
          ".validate": "newData.isNumber() && newData.val() >= 0"
        },

        "$else": {
          ".write": false,
          ".validate": false
        }

      }
    },

    "snippets": {
      "$snippetId": {
        ".read": "data.child('isPublic').val() === true || data.child('userId').val() == auth.uid",
        ".write": "data.val() == null || data.child('userId').val() == auth.uid",
        ".indexOn": ["userId", "clonedFromId", "packageTemplate", "createdAt", "updatedAt"],

        "userId": {
          ".validate": "newData.isString()"
        },

        "clonedFromId": {
          ".validate": "newData.isString()"
        },

        "packageId": {
          ".validate": "newData.isString()"
        },

        "title": {
          ".validate": "newData.isString()"
        },

        "attribution": {
          ".validate": "newData.isString()"
        },

        "description": {
          ".validate": "newData.isString()"
        },

        "compiledAt": {
          ".validate": "newData.isNumber() && (newData.val() === now || data.val() == newData.val())"
        },

        "isPublic": {
          ".validate": "newData.isBoolean()"
        },

        "createdAt": {
          ".validate": "newData.isNumber() && (newData.val() === now || data.val() == newData.val())"
        },

        "updatedAt": {
          ".validate": "newData.isNumber() && (newData.val() === now || data.val() == newData.val())"
        },

        "$else": {
          ".validate": false
        }
      }
    },

    "packages": {
      "$packageId": {
        ".read": true,
        ".write": "auth.token.isAdmin === true",

        "name": {
          ".validate": "newData.isString()"
        },

        "dependencies": {
          ".validate": "newData.hasChildren()",

          "$dependency": {
            ".validate": "newData.isString()"
          }
        },

        "flagged": {
          ".validate": "newData.isBoolean()"
        },

        "createdAt": {
          ".validate": "newData.isNumber() && (newData.val() === now || data.val() == newData.val())"
        },

        "updatedAt": {
          ".validate": "newData.isNumber() && (newData.val() === now || data.val() == newData.val())"
        }
      }
    }
  }
}
